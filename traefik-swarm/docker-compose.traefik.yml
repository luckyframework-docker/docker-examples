version: '3.8'
services:
  traefik:
    image: traefik:v2.3.2
    ports:
      - 80:80
      - 443:443
    environment:
      ADMIN_USER:
      HASHED_PASSWORD:
    depends_on:
    - traefik-docker-link
    volumes:
      - ./traefik:/etc/traefik
    deploy:
      placement:
        constraints: [node.role == manager]
      labels:
      - traefik.enable=true
      - traefik.http.services.api-service.loadbalancer.server.port=8080
      - traefik.http.routers.api.rule=Host(`traefik.${APP_DOMAIN}`)
      - traefik.http.routers.api.entrypoints=websecure
      - traefik.http.routers.api.service=api@internal
      - traefik.http.routers.api.middlewares=traefik-auth@file
      - traefik.http.routers.api.tls=true
      - traefik.http.routers.api.tls.certresolver=letsEncrypt
    networks:
    - docker_socket
    - internal
  traefik-docker-link:
    image: tecnativa/docker-socket-proxy
    networks:
    - docker_socket
    deploy:
      mode: global
      placement:
        constraints: [node.role == manager]
    environment:
      CONTAINERS: 1
      NETWORKS: 1
      SERVICES: 1
      SWARM: 1
      TASKS: 1
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
networks:
  docker_socket:
